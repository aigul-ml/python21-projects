# Task 1 

from dataclasses import replace


a = {'x': 1, 'y': 2, 'z': 1}

print([key for key in a.keys()][1])


# Task 2 
# Объявите словарь a = {'a': 1, 'b': 2, 'c': 1} удалите один из элементов и распечатайте удалённый элемент.

a = {'a': 1, 'b': 2, 'c': 1}

deleted = a.pop('b')
print(deleted)


# Task 3 
# Объявите словарь  a = {'a': 1, 'b': 2, 'c': 1} добавьте в него новую пару ключ: значение  {'f': 55} специальным методом и распечатайте.

a = {'a': 1, 'b': 2, 'c': 1}

a['f'] = 55

print(a)


# Объявите словарь a = {'a': 1, 'b': 2, 'c': 1}
# удалите всего его элементы специальным методом и распечатайте словарь. Результат в терминале, должен быть такой: {} 

a = {'a': 1, 'b': 2, 'c': 1}
a.clear()
print(a)

# Task 5 
# Дан словарь a = {'a': 1, 'b': 2, 'c': 1} выведите все его ключи методом словаря, то есть только a, b, c 
# Вывод: ['a', 'b', 'c']

a = {'a': 1, 'b': 2, 'c': 1}
key_list = list(a.keys())
print(key_list)


# Task 6 
# Объявите словарь a = {'a': 1, 'b': 2, 'c': 1} сделайте его копию b специальным методом и распечатайте эту копию.

a = {'a': 1, 'b': 2, 'c': 1}
b = a.copy()
print(b)


# Task 7
# Дан словарь a = {'a': 1, 'b': 2, 'c': 1} пройдитесь по нему циклом и распечатайте все ключи.

a = {'a': 1, 'b': 2, 'c': 1}
for key in a: 
    print(key)


# Task 8 
# Создайте словарь a = {'a': 1, 'b': 2, 'c': 1} пройдитесь по нему и распечатайте все значения

a = {'a': 1, 'b': 2, 'c': 1}
for key, value in a.items():
    print(value)    # printing out only values 


# Task 9
# Словари. Циклы и условное ветвление.Помимо циклов, словарями можно манипулировать с помощью условных операторов. К примеру, у нас есть словарь: 

# some_dict = {0: False, 1: 'это', 2: 'строка', 3: True} 

# Нам нужно оставить в словаре только те ключи, значениями которых являются строки, а остальные удалить. Для этого нам нужно пройтись по словарю циклом. Изменение словаря во время цикла приводит к ошибке, чтобы избежать этого мы должны обернуть наш словарь в метод list(таким образом мы получим копии ключей):
#
# for k, v in list(some_dict.items()): 

# Теперь, в теле цикла можем прописать условие, наше значение в переменной v должно иметь тип строки - str. Для проверки к какому типу данных относится наш элемент, используем функцию type(): for k, v in list(some_dict.items()): if type(v) != str: все значения у которых функциях type не будет выдавать str ( != - не равно), мы будем удалять с помощью метода словарей del, обращаясь по ключу k: 

# for k, v in list(some_dict.items()):     
#     if type(v) != str:         
#         del some_dict[k]  
# print(some_dict) 

# В результате, some_dict выглядит таким образом:
# {1: 'это', 2: 'строка'} 

some_dict = {0: False, 1: 'this', 2: 'string', 3: True}

for key, value in list(some_dict.items()):
    if type(value) != str:
        del some_dict[key]
print(some_dict)

# Task 9. 
# Создайте словарь a с числовыми значениями. Создайте новый словарь b, такой же как словарь а, но все четные значения замените на 2.

a = {'a': 1, 'b': 4, 'c': 1, 'd': 5, 'e': 6}
b = {}
for key in a:
    value = a[key]    # обращаемся к словарю по ключу 
    if value % 2 == 0:
        b[key] = 2    # заменить данные в нашем словаре 
    else:
        b[key] = value
print(b)    



# b = a.copy()

# for k, v in list(b.items()):
#     if v % 2 == 0:
#         b[k] = 2
# print(b)

# key_list = [a]
# for key, value in list(a.items()):
#     if value % 2 == 0: 
#         replace a[key]
# print(a)


